name: PyTest
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

  #     # - name: Build planetmint
  #     #   run: docker build . --file Dockerfile --tag planetmint:$(date +%s)

      - name: Build container
        run: docker-compose -f docker-compose.yml build planetmint

      - name: Check images
        run: docker images

      - name: Save image
        run: docker save -o planetmint.tar planetmint_planetmint

      - name: Upload image
        uses: actions/upload-artifact@v3
        with:
          name: planetmint
          path: planetmint.tar
          retention-days: 5


  test:
    runs-on: ubuntu-latest
    needs: build
    # strategy:
    #   matrix:
    #     include:
    #       # - db: "MongoDB with ABCI"
    #       #   host: "mongodb"
    #       #   port: 27017
    #       #   abci: "enable"
    #       # - db: "MongoDB without ABCI"
    #       #   host: "mongodb"
    #       #   port: 27017
    #       #   abci: "disable"
    #       # - db: "Tarantool with ABCI"
    #       #   host: "tarantool"
    #       #   port: 3303
    #       #   abci: "enable"
    #       - db: "Tarantool without ABCI"
    #         host: "tarantool"
    #         port: 3303
    #         abci: "disable"

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Download planetmint
        uses: actions/download-artifact@v3
        with:
          name: planetmint

      - name: Load planetmint
        run: docker load -i planetmint.tar

      - name: Check images
        run: docker images

      - name: Start containers
        run: docker-compose -f docker-compose.yml up -d planetmint

      - name: Check running containers
        run: docker ps -a

      - name: Run tests
        run: docker exec planetmint_planetmint_1 pytest
      # - name: Run tests
      #   run: docker-compose -f docker-compose.yml exec planetmint pytest # docker-compose --version
        # run: |
        #   if [[ "${{ matrix.abci }}" == "enable" ]]; then
        #     docker-compose exec planetmint pytest -v -m abci
        #   fi
        #   if [[ "${{ matrix.abci }}" == "disable" ]]; then
        #     docker-compose exec planetmint pytest -v --cov=planetmint --cov-report xml:htmlcov/coverage.xml
        #   fi


      


